[{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class Solution { public: vector\u0026lt;int\u0026gt; twoSum(vector\u0026lt;int\u0026gt;\u0026amp; nums, int target) { unordered_map\u0026lt;int,int\u0026gt; hash; for (int i = 0; i \u0026lt; nums.size();i ++) { if (hash.count(target - nums[i])) { return {hash[target - nums[i]], i}; } else { hash[nums[i]] = i; } } return {}; } }; ","permalink":"https://zzydev.github.io/posts/leetcode/lc01_%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/","summary":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class Solution { public: vector\u0026lt;int\u0026gt; twoSum(vector\u0026lt;int\u0026gt;\u0026amp; nums, int target) { unordered_map\u0026lt;int,int\u0026gt; hash; for (int i = 0; i \u0026lt; nums.size();i ++) { if (hash.count(target - nums[i])) { return {hash[target - nums[i]], i}; } else { hash[nums[i]] = i; } } return {}; } };","title":"Lc01_两数之和"}]